[{"C:\\Users\\fabia\\Downloads\\bitmovin-player-web-samples-main\\bitmovin-player-web-samples-main\\react\\bundled-player\\delphi\\src\\index.js":"1","C:\\Users\\fabia\\Downloads\\bitmovin-player-web-samples-main\\bitmovin-player-web-samples-main\\react\\bundled-player\\delphi\\src\\App.js":"2","C:\\Users\\fabia\\Downloads\\bitmovin-player-web-samples-main\\bitmovin-player-web-samples-main\\react\\bundled-player\\delphi\\src\\bitmovinPlayer.js":"3"},{"size":219,"mtime":1674532332807,"results":"4","hashOfConfig":"5"},{"size":666,"mtime":1675181528984,"results":"6","hashOfConfig":"5"},{"size":3119,"mtime":1675529013795,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1kwmo4a",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"C:\\Users\\fabia\\Downloads\\bitmovin-player-web-samples-main\\bitmovin-player-web-samples-main\\react\\bundled-player\\delphi\\src\\index.js",[],["17","18"],"C:\\Users\\fabia\\Downloads\\bitmovin-player-web-samples-main\\bitmovin-player-web-samples-main\\react\\bundled-player\\delphi\\src\\App.js",["19"],"import './App.css';\nimport logo from './images/bitmovin-logo.png';\nimport playlist from './playlist.json';\nimport BitmovinPlayer from './bitmovinPlayer';\n\nfunction App() {\n  const userId = '9d55ee79724c41dd848d6f7ec63c0d11';\n\n  return (\n    <div className='app'>\n      <div id='wrapper'>\n        <div id='banner'>\n          <div className='logo'><img src={logo}/></div>\n        </div>\n        <div className='container'>\n          <div className='content'>\n            <div id='player-wrapper'>\n              <BitmovinPlayer userId={userId} playlist={playlist}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\fabia\\Downloads\\bitmovin-player-web-samples-main\\bitmovin-player-web-samples-main\\react\\bundled-player\\delphi\\src\\bitmovinPlayer.js",["20"],"import React, {useEffect, useRef, useState} from \"react\";\nimport {Player, PlayerEvent} from \"bitmovin-player\";\nimport {UIFactory} from \"bitmovin-player/bitmovinplayer-ui\";\n\nimport \"bitmovin-player/bitmovinplayer-ui.css\";\n\nfunction BitmovinPlayer({userId, playlist}) {\n  const [player, setPlayer] = useState(null);\n  const [showControls, setShowControls] = useState(false);\n  let i = 0;\n  const playerConfig = {\n    key: \"ac8c334b-49ef-4fae-8565-b05c648adc5f\",\n    ui: false,\n    playback: {\n      autoplay: true,\n    },\n    analytics: {\n      key: \"A686277F-F815-49B3-8AFB-562BE46DEE62\",\n    },\n  };\n  const playerDiv = useRef();\n  const addSubtitles = (playerInstance, subtitles) => {\n    if (!subtitles || !subtitles.length) {\n      return;\n    }\n\n    subtitles.forEach((subtitle, i) => {\n      subtitle.id = `sub${i}`;\n      subtitle.kind = \"subtitle\";\n\n      playerInstance.subtitles.add(subtitle);\n    });\n  };\n\n  const loadVideo = async (playerInstance, video) => {\n    const {hls, title, videoId, cdnProvider} = video\n    await playerInstance.load({\n      hls,\n      analytics: {\n        title,\n        videoId,\n        cdnProvider,\n        userId,\n        customData1: \"any custom data 1\",\n        customData2: \"any custom data 2\",\n        customData3: \"any custom data 3\",\n        customData4: \"any custom data 4\",\n        customData5: \"any custom data 5\",\n      }\n    });\n    addSubtitles(playerInstance, video.subtitles);\n  }\n\n  useEffect(() => {\n    function setupPlayer() {\n      const playerInstance = new Player(playerDiv.current, playerConfig);\n\n      UIFactory.buildDefaultUI(playerInstance);\n      playerInstance.on(PlayerEvent.Ready, () => {\n        if (i) {\n          playerInstance.play();\n        }\n      });\n      playerInstance.on(PlayerEvent.PlaybackFinished, () => {\n        i++;\n\n        if (i < playlist.length) {\n          loadVideo(playerInstance, playlist[i]);\n        }\n      });\n\n      loadVideo(playerInstance, playlist[0]).then(() => {\n        addSubtitles(playerInstance);\n      });\n      setPlayer(playerInstance);\n    }\n\n    setupPlayer();\n\n    return () => {\n      function destroyPlayer() {\n        if (player != null) {\n          player.destroy();\n          setPlayer(null);\n        }\n      }\n\n      destroyPlayer();\n    };\n  }, []);\n\n  const handleMouseEnter = () => {\n    setShowControls(true)\n  }\n\n  const handleMouseLeave = () => {\n    setShowControls(false)\n  }\n\n  const handleClick = () => {\n    alert('custom button')\n  }\n\n  return (\n    <div className={showControls ? 'content showControls' : 'content'}\n         onMouseEnter={handleMouseEnter}\n         onMouseLeave={handleMouseLeave}>\n      <div className='player-wrapper'>\n        <div id=\"player\" className='player' ref={playerDiv}/>\n        <button aria-label=\"Custom button\"\n                className=\"bmpui-ui-settingstogglebutton custom-button bmpui-off\"\n                type=\"button\"\n                aria-pressed=\"false\"\n                onClick={handleClick}\n        >\n          <span className=\"bmpui-label\">Custom button</span>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default BitmovinPlayer;\n",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":13,"column":33,"nodeType":"27","endLine":13,"endColumn":50},{"ruleId":"28","severity":1,"message":"29","line":90,"column":6,"nodeType":"30","endLine":90,"endColumn":8,"suggestions":"31"},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'i', 'loadVideo', 'player', 'playerConfig', and 'playlist'. Either include them or remove the dependency array.","ArrayExpression",["34"],"no-global-assign","no-unsafe-negation",{"desc":"35","fix":"36"},"Update the dependencies array to be: [i, loadVideo, player, playerConfig, playlist]",{"range":"37","text":"38"},[2270,2272],"[i, loadVideo, player, playerConfig, playlist]"]